summary(select(dvst,`%GC`))
HighLowGC <- summary(select(dvst,`%GC`))
filter(dvst, `%GC`<= 0.08008 & >= 85.4855)
filter(dvst, `%GC`<= 0.08008 & = 85.4855)
filter(dvst, `%GC`= 0.08008 & = 85.4855)
filter(dvst, `%GC`= 0.08008 & 85.4855)
filter(dvst, `%GC`== 0.08008 & 85.4855)
filter(dvst, `%GC`== 0.08008 | 85.4855)
filter(dvst, `%GC`== 0.08008 | 85.4855)
filter(dvst, `%GC`== 0.08008)
filter(dvst, `%GC`= 0.08008)
filter(dvst, `%GC`= 0.8008)
filter(dvst, `%GC`== 0.8008)
summary(select(dvst,`%GC`))
filter(dvst, `%GC` == 0.8008)
filter(dvst, `%GC` < 1)
filter(dvst, `%GC` > 45.4)
filter(dvst, `%GC` > 85.4)
filter(dvst, `total SNPs`== 0)
filter(dvst, `total Bases` < 1000)
filter(dvst, `%GC` < 1)
summary(select(dvst, `Divergence`))
filter(dvst, `Divergence` > 1)
between(dvst, `%GC`, 1, 2)
between(dvst, `%GC`, 1)
filter(dvst, `%GC`== min(`%GC`))
filter(dvst, `%GC`== max(`%GC`))
filter(dvst, `Divergence` max(`Divergence`))
filter(dvst, `Divergence`== max(`Divergence`))
filter(dvst, between(`%GC`, mean(`%GC`)-5, mean(`%GC`)+5))
sum(filter(dvst, cent))
sum(filter(dvst, cent==TRUE))
nrow(filter(dvst, cent))
save.image("C:/Users/domin/OneDrive - Iowa State University/Documents/BCB546_R_Assignment/Environment.RData")
#arrange is basically the sort function, looks at first column first and uses the second column to break ties
arrange(dvst, cent, `%GC`)
#select lets you select only a few colums at once instead of all of them
dvst <- rename(dvst, total.SNPs = `total SNPs`,
total.Bases = `total Bases`,
unique.SNPs = `unique SNPs`,
reference.Bases = `reference Bases`,
percent.GC = `%GC`) #renaming all the columns that require ` `!
colnames(dvst)
summarise(dvst, GC = mean(percent.GC, na.rm = TRUE), averageSNPs=mean(total.SNPs,
na.rm = TRUE), allSNPs=sum(total.SNPs))
by_cent <- group_by(dvst, cent)
summarise(by_cent, GC = mean(percent.GC, na.rm = TRUE), averageSNPs=mean(total.SNPs, na.rm = TRUE), allSNPs=sum(total.SNPs))
save.image("C:/Users/domin/OneDrive - Iowa State University/Documents/BCB546_R_Assignment/Environment.RData")
load("~/BCB546_R_Assignment/Environment.RData")
library(tidyverse)
dvst <- read_csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt") %>%
mutate(diversity = Pi / (10*1000), cent = (start >= 25800000 & end <= 29700000)) %>%
rename(percent.GC = `%GC`, total.SNPs = `total SNPs`, total.Bases = `total Bases`, reference.Bases = `reference Bases`)
dvst <- mutate(dvst, position = (end + start) / 2)
ggplot(data = dvst) + geom_point(mapping=aes(x=position, y=diversity))
ggplot(data = <DATA>) +
ggplot(data = dvst) + geom_point(mapping = aes(x=position, y=diversity, color=cent))
ggplot(data = dvst, mapping = (aes(x=position, y=diversity))) + geom_point(11)
ggplot(data = dvst, mapping = (aes(x=position, y=diversity))) + geom_point(1)
ggplot(data = dvst, mapping = (aes(x=position, y=diversity)) + geom_point(1))
ggplot(data = dvst, mapping = (aes(x=position, y=diversity) + geom_point(1))
\+ geom_point(mapping = aes(x = position, y = diversity))
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity))
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity, color = diversity))
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity, color = depth))
ggplot(data = dvst) + geom_stroke(mapping = aes(x = position, y = diversity, color = diversity))
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity, color = diversity, stroke=1))
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity, stroke=10))
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity, color = percent.GC < 50))
ggplot(data = dvst) + geom_point(mapping = aes(x=position, y=diversity), alpha=0.01)
ggplot(data = dvst) + geom_density(mapping = aes(x=diversity), fill="blue")
ggplot(data = dvst) + geom_density(mapping = aes(x=diversity), fill="blue", color="red")
ggplot(data = dvst) + geom_density(mapping = aes(x=diversity, fill=cent), alpha=0.4)
ll <- list(a=rnorm(6, mean=1), b=rnorm(6, mean=4), c=rnorm(6, mean=6))
print(mean(ll[[i]]))
for (i in 1:length(ll)) {
print(mean(ll[[i]]))
}
lapply(ll, mean)
lapply(ll, mean
lapply(ll, mean)
lapply(ll, mean)
save.image("C:/Users/domin/OneDrive - Iowa State University/Documents/BCB546_R_Assignment/Environment.RData")
#Read datasets
mtfs <- read_tsv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_recombrates.txt")
rpts <- read_tsv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_repeats.txt")
library(tidyverse)
#Read datasets
mtfs <- read_tsv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_recombrates.txt")
rpts <- read_tsv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_repeats.txt")
head(mtfs)
head(rpts)
#Combine columns
rpts2 <- rpts %>%
unite(pos, chr, motif_start, sep="-") %>% ## new function!
select(name, pos) %>%
inner_join(mtfs, by="pos")
View(rpts2)
View(rpts)
View(mtfs)
p <- ggplot(data = rpts2, mapping = aes(x=dist, y=recom)) + geom_point(size=1)
p <- p + geom_smooth(method="loess", se=FALSE, span=1/10)
print(p)
save.image("C:/Users/domin/OneDrive - Iowa State University/Documents/BCB546_R_Assignment/Environment.RData")
library(tidyverse)
read.delim(fang_et_al_genotypes.txt, headers=T)
Fang_et_al_genotypes <- read_csv("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
Fang_et_al_genotypes <- read_csv("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
Fang_et_al_genotypes <- read_csv("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt", header=T)
View(Fang_et_al_genotypes)
Fang_et_al_genotypes <- read_csv("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt", col_names = T)
View(Fang_et_al_genotypes)
Fang_et_al_genotypes <- read.csv("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt", header = T)
View(Fang_et_al_genotypes)
Fang_et_al_genotypes <- read_csv("assignments/UNIX_Assignment/fang_et_al_genotypes.txt", header = T)
Fang_et_al_genotypes <- read_csv("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/snp_position.txt")
View(Fang_et_al_genotypes)
snp_positions <- read_csv("https://raw.github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/snp_position.txt")
download.file("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
download.file(https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/snp_position.txt)
library(tidyverse)
library(tidyverse)
snp_positions <- read_csv(Fang_et_al_genotypes)
snp_positions <- read_csv("assignments/UNIX_Assignment/snp_position.txt")
snp_positions <- read_csv("assignments/UNIX_Assignment/snp_position.txt")
snp_positions <- read_csv("https://github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/snp_position.txt")
snp_positions
str(snp_positions)
snp_positions <- read_csv(snp_positions)
snp_positions <- read_csv("https://raw.github.com/EEOB-BioData/BCB546_Spring2023/blob/main/assignments/UNIX_Assignment/snp_position.txt"
Fang_et_al_genotypes <- read_csv(https://raw.githubusercontent.com/EEOB-BioData/BCB546_Spring2023/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt)
Fang_et_al_genotypes <- read_csv("https://raw.githubusercontent.com/EEOB-BioData/BCB546_Spring2023/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
View(Fang_et_al_genotypes)
snp_positions <- read_csv("https://raw.githubusercontent.com/EEOB-BioData/BCB546_Spring2023/main/assignments/UNIX_Assignment/snp_position.txt")
View(snp_positions)
snp_positions <- read.delim("https://raw.githubusercontent.com/EEOB-BioData/BCB546_Spring2023/main/assignments/UNIX_Assignment/snp_position.txt", header = T, sep = "\t")
View(snp_positions)
Fang_et_al_genotypes <- read.delim("https://raw.githubusercontent.com/EEOB-BioData/BCB546_Spring2023/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt", header = T, sep = "\t")
View(Fang_et_al_genotypes)
View(Fang_et_al_genotypes)
str(snp_positions)
str(Fang_et_al_genotypes)
maize_genotypes <- filter(genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
maize_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
View(maize_genotypes)
teosinte_g <- filter(Fang_et_al_genotypes, Group %in% c('ZMPBA', 'ZMPIL', 'ZMPJA'))
teosinte_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMPBA', 'ZMPIL', 'ZMPJA'))
View(teosinte_g)
remove(teosinte_g)
save.image("C:/Users/domin/OneDrive - Iowa State University/Documents/BCB546_R_Assignment/R_Assignment_Environment.RData")
column_to_rownames(maize_genotypes, var = "Sample_ID")
maize_genotypes <- column_to_rownames(maize_genotypes, var = "Sample_ID")
View(maize_genotypes)
transposed_maize <- t(maize_genotypes)
View(transposed_maize)
str(transposed_maize)
transposed_maize <- t(maize_genotypes) %>% as.data.frame() %>% rownames_to_column(., var = "SNP_ID")
View(transposed_maize)
transposed_maize <- transposed_maize[3:nrow(transposed_maize)]
View(transposed_maize)
Mdata <- merge(snp_positions, transposed_maize, by = "SNP_ID")
maize_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
maize_genotypes <- column_to_rownames(maize_genotypes, var = "Sample_ID")
View(maize_genotypes)
View(maize_genotypes)
maize_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
View(maize_genotypes)
View(Fang_et_al_genotypes)
maize_genotypes <- column_to_rownames(maize_genotypes, var = "Sample_ID")
View(maize_genotypes)
transposed_maize <- t(maize_genotypes) %>% as.data.frame() %>% rownames_to_column(var = "SNP_ID")
View(transposed_maize)
transposed_maize <- transposed_maize[3:nrow(transposed_maize)]
Mdata <- merge(snp_positions, transposed_maize, by = "SNP_ID")
View(transposed_maize)
View(transposed_maize)
View(transposed_maize)
View(snp_positions)
maize_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
maize_genotypes <- column_to_rownames(maize_genotypes, var = "Sample_ID")
View(maize_genotypes)
maize_genotypes <- column_to_rownames(maize_genotypes, var = "SNP_ID")
maize_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
maize_genotypes <- column_to_rownames(maize_genotypes, var = "SNP_ID")
View(maize_genotypes)
transposed_maize <- t(maize_genotypes) %>% as.data.frame()
View(transposed_maize)
transposed_maize <- t(maize_genotypes) %>% as.data.frame() %>% rownames_to_column(var = "Sample_ID")
View(transposed_maize)
maize_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
maize_genotypes <- column_to_rownames(maize_genotypes, var = "Sample_ID")
View(maize_genotypes)
transposed_maize <- t(maize_genotypes) %>% as.data.frame()
View(transposed_maize)
transposed_maize <- t(maize_genotypes) %>% as.data.frame() %>% rownames_to_column(var = "SNP_ID")
View(transposed_maize)
transposed_maize <- transposed_maize[3:nrow(transposed_maize)]
View(transposed_maize)
maize_genotypes <- filter(Fang_et_al_genotypes, Group %in% c('ZMMIL', 'ZMMLR', 'ZMMMR'))
maize_genotypes <- column_to_rownames(maize_genotypes, var = "Sample_ID")
transposed_maize <- t(maize_genotypes) %>% as.data.frame()
transposed_maize <- t(maize_genotypes) %>% as.data.frame() %>% rownames_to_column(var = "SNP_ID")
Mdata <- merge(snp_positions, transposed_maize, by = "SNP_ID")
View(Mdata)
Mdata <- select(Mdata, SNP_ID, Chromosome, Position, everything())
View(Mdata)
teosinte_genotypes <- column_to_rownames(teosinte_genotypes, var = "Sample_ID")
transposed_teosinte <- t(teosinte_genotypes) %>% as.data.frame() %>% rownames_to_column(., var = "SNP_ID")
View(transposed_teosinte)
Maize_data <- merge(snp_positions, transposed_maize, by = "SNP_ID")
Maize_data <- select(Mdata, SNP_ID, Chromosome, Position, everything())
rm(Mdata)
View(Maize_data)
Maize_data <- merge(snp_positions, transposed_maize, by = "SNP_ID")
Maize_data <- select(Maize_data, SNP_ID, Chromosome, Position, everything())
teosinte_genotypes <- column_to_rownames(teosinte_genotypes, var = "Sample_ID")
transposed_teosinte <- t(teosinte_genotypes) %>% as.data.frame() %>% rownames_to_column(., var = "SNP_ID")
Teosinte_Data <- merge(SNPs, transposed_teosinte, by = "SNP_ID")
Teosinte_Data <- merge(SNPs, transposed_teosinte, by = "SNP_ID")
Teosinte_Data <- select(Teosinte_Data, SNP_ID, Chromosome, Position, everything())
transposed_teosinte <- t(teosinte_genotypes) %>% as.data.frame() %>% rownames_to_column(., var = "SNP_ID")
Teosinte_Data <- merge(snp_positions, transposed_teosinte, by = "SNP_ID")
Teosinte_Data <- select(Teosinte_Data, SNP_ID, Chromosome, Position, everything())
View(Teosinte_Data)
save.image("C:/Users/domin/OneDrive - Iowa State University/Documents/BCB546_R_Assignment/R_Assignment_Environment.RData")
dir.create('./Maize')
chr_maize <- filter(Maize_data, Chromosome != "multiple", & Chromosome != "unknown")
chr_maize <- filter(Maize_data, Chromosome != "unknown")
View(chr_maize)
chr_maize <- filter(Maize_data, Chromosome = "unknown")
chr_maize <- filter(Maize_data, Chromosome == "unknown")
chr_maize <- filter(Maize_data, Chromosome == "unknown" & Chromosome == "multiple")
View(chr_maize)
chr_maize <- filter(Maize_data, Chromosome == "unknown", Chromosome == "multiple")
chr_maize <- filter(Maize_data, Chromosome !x|y "unknown", Chromosome !x|y "multiple")
chr_maize <- filter(Maize_data, Chromosome !x|y "unknown" "multiple")
chr_maize <- filter(Maize_data, Chromosome !x|y "unknown", "multiple")
chr_maize <- filter(Maize_data, Chromosome != "unknown", "multiple")
chr_maize <- filter(Maize_data, Chromosome != "unknown", != "multiple")
chr_maize <- filter(Maize_data, Chromosome != "unknown" & != "multiple")
chr_maize <- filter(Maize_data, Chromosome != "unknown" & Chromosome != "multiple")
View(chr_maize)
order(chr_maize$Chromosome, na.last = TRUE, decreasing = FALSE)
chr_maize_ascending <- order(chr_maize$Chromosome, na.last = TRUE, decreasing = FALSE)
library(data.table)
chr_maize_ascending <- setorder(chr_maize$Chromosome, na.last = TRUE, decreasing = FALSE)
chr_maize_ascending <- chr_maize %>% arrange(Chromosome)
View(chr_maize)
View(chr_maize)
View(chr_maize_ascending)
chr_maize_ascending <- chr_maize %>% arrange(Chromosome == i)
chr_maize_ascending <- chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
chr_maize_ascending <- chr_maize %>% filter(Chromosome = i) %>% arrange(Position)
chr_maize_ascending <- chr_maize %>% filter(Chromosome) %>% arrange(Position)
chr_maize_ascending <- chr_maize %>% order(Chromosome) %>% arrange(Position)
chr_maize_ascending <- chr_maize %>% order(Chromosome) %>% arrange(Position)
chr_maize_ascending <- chr_maize %>% order(Chromosome, decreasing = FASLE) %>% arrange(Position)
chr_maize_ascending <- chr_maize %>% order(chr_maize$Chromosome) %>% arrange(Position)
chr_maize_ascending <- chr_maize %>% order(chr_maize$Chromosome) %>% order(chr_maize$Position)
chr_maize_ascending <- chr_maize %>% arrange(chr_maize$Chromosome) %>% arrange(chr_maize$Position)
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write.table(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)}
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
}
View(chr_maize_ascending)
write.table(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write.table(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
View(chr_maize_ascending)
View(chr_maize_ascending)
View(chr_maize_ascending)
for (i in 1:length(unique(chr_maize$Chromosome)))
print(echo)
print
print(p)
p <- for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
print(p)
}
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
View(chr_maize_ascending)
(for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
})
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write_delim(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
write_csv(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write_csv(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
write_delim(chr_maize_ascending,delim = "/t", file = paste("./Maize/Maize_Part_A",i, sep="_"))
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write_delim(chr_maize_ascending,delim = "/t", file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write.table(chr_maize_ascending, sep = "/t", row.names = TRUE, col.names = TRUE,file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
write.table(chr_maize_ascending, row.names = TRUE, col.names = TRUE,file = paste("./Maize/Maize_Part_A",i, sep="_"))
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write.table(chr_maize_ascending, row.names = TRUE, col.names = TRUE,file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write_delim(chr_maize_ascending,delim = "/t", file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_ascending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(Position)
write_delim(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
Subbed_Maize <- as_tibble(lapply(Mdata, gsub, pattern ="?", replacement ="-", fixed = TRUE))
Subbed_Maize <- as_tibble(lapply(Maize_data, gsub, pattern ="?", replacement ="-", fixed = TRUE))
View(Subbed_Maize)
Missing_Q_Maize <- as_tibble(lapply(chr_maize, gsub, pattern ="?", replacement ="-", fixed = TRUE))
View(Missing_Q_Maize)
Missing_Q_Maize <- as_tibble(lapply(chr_maize, gsub, pattern ="-", replacement ="?", fixed = TRUE))
View(Missing_Q_Maize)
for (i in 1:length(unique(Missing_Q_Maize$Chromosome))){
chr_maize_ascending <-  Missing_Q_Maize %>% filter(Chromosome == i) %>% arrange(Position)
write_delim(chr_maize_ascending, file = paste("./Maize/Maize_Part_A",i, sep="_"))
}
#Part B: descending and missing replaced by "-"
for (i in 1:length(unique(chr_maize$Chromosome))){
chr_maize_descending <-  chr_maize %>% filter(Chromosome == i) %>% arrange(desc(Position))
write_delim(chr_maize_descending, file = paste("./Maize/Maize_Part_B",i, sep="_"))
}
View(chr_maize_descending)
View(chr_maize_ascending)
View(chr_maize)
View(Missing_Q_Maize)
Missing_D_Maize <- as_tibble(lapply(chr_maize, gsub, pattern ="?", replacement ="-", fixed = TRUE))
#Part B: descending and missing replaced by "-"
for (i in 1:length(unique(Missing_D_Maize$Chromosome))){
chr_maize_descending <-  Missing_D_Maize %>% filter(Chromosome == i) %>% arrange(desc(Position))
write_delim(chr_maize_descending, file = paste("./Maize/Maize_Part_B",i, sep="_"))
}
View(Missing_Q_Maize)
View(Missing_D_Maize)
unknown_maize <- filter(Maize_data, Chromosome != "unknown")
View(unknown_maize)
unknown_maize <- filter(Maize_data, Chromosome == "unknown")
View(unknown_maize)
multiple_maize <- filter(Maize_data, Chromosome == "multiple")
View(multiple_maize)
write(multiple_maize, file = paste("./Maize/multiple_maize))
write(multiple_maize, file = "./Maize/Multiple_Maize)
write(multiple_maize, file = "./Maize/Multiple_Maize")
write(multiple_maize, file = "./Maize/")
write(multiple_maize, file = "./Maize/Multiple_Maize")
write(multiple_maize, file = paste("./Maize/Multiple_Maize"))
write_delim(multiple_maize, file = "./Maize/Multiple)Maize")
write_delim(multiple_maize, file = "./Maize/Multiple_Maize")
rm
write_delim(unknown_maize, file = "./Maize/Unknown_Maize")
dir.create('./Teosinte')
chr_teosinte <- filter(Teosinte_Data, Chromosome != "unknown" & Chromosome != "multiple")
Missing_Q_Teosinte <- as_tibble(lapply(chr_teosinte, gsub, pattern ="-", replacement ="?", fixed = TRUE))
Missing_D_Teosinte <- as_tibble(lapply(chr_teosinte, gsub, pattern ="?", replacement ="-", fixed = TRUE))
#Part A: ascending order and missing replaced by "?"
for (i in 1:length(unique(Missing_Q_Teosinte$Chromosome))){
chr_teosinte_ascending <-  Missing_Q_Teosinte %>% filter(Chromosome == i) %>% arrange(Position)
write_delim(chr_teosinte_ascending, file = paste("./Teosinte/Teosinte_Part_A",i, sep="_"))
}
#Part B: descending and missing replaced by "-"
for (i in 1:length(unique(Missing_D_Teosinte$Chromosome))){
chr_teosinte_descending <-  Missing_D_Teosinte %>% filter(Chromosome == i) %>% arrange(desc(Position))
write_delim(chr_teosinte_descending, file = paste("./Teosinte/Teosinte_Part_B",i, sep="_"))
}
#Part C: files for multiple and unknown maize data
unknown_teosinte <- filter(Teosinte_Data, Chromosome == "unknown")
multiple_teosinte <- filter(Teosinte_Data, Chromosome == "multiple")
write_delim(multiple_teosinte, file = "./Teosinte/Multiple_Teosinte")
write_delim(unknown_teosinte, file = "./Teosinte/Unknown_Teosinte")
# Data Visualization
library(ggplot2)
# Data Visualization
library(ggplot)
# Data Visualization
library(ggplot2)
#data clean up
Formated_SNP <- SNPs %>% select(SNP_ID, Chromosome, Position)
Genotypes_Transposed <- genotypes %>% select(-JG_OTU, -Group) %>% column_to_rownames(., var = "Sample_ID") %>% t() %>% as.data.frame() %>% rownames_to_column(., var = "SNP_ID")
Merged_Genotypes <- merge(Formated_SNP, Genotypes_Transposed) %>% filter(., !Chromosome %in% c("unknown", "multiple"))
#data clean up
Formated_SNP <- snp_positions %>% select(SNP_ID, Chromosome, Position)
Genotypes_Transposed <- Fang_et_al_genotypes %>% select(-JG_OTU, -Group) %>% column_to_rownames(., var = "Sample_ID") %>% t() %>% as.data.frame() %>% rownames_to_column(., var = "SNP_ID")
Merged_Genotypes <- merge(Formated_SNP, Genotypes_Transposed) %>% filter(., !Chromosome %in% c("unknown", "multiple"))
TotalSNPs <-
ggplot(Merged_Genotypes, aes(x=as.double(Chromosome), #x=as.double(Chromosome) considers Chr as a number
fill = as.factor(as.double(Chromosome)))) +  # for getting chrom in the right order in the legend
geom_bar() +
scale_x_continuous(breaks = 1:10) + # bcs x=as.double(Chromosome), breaks by default don't match chrom number
theme_bw() +
ggtitle("Total Number of SNPs across each chromosome") +
labs(x = "Chromosome", y = "Total number of SNPs", fill = "Chromosome") #fill = "Chromosome" only replace legend's tittle
View(TotalSNPs)
DiversitySNPs <-
ggplot(Merged_Genotypes, aes(x= as.numeric(Position))) +
geom_density(aes(fill = as.factor(as.double(Chromosome)))) +  #same as the previous plot
facet_wrap(~ as.factor(as.double(Chromosome)), nrow = 2, ncol = 5) +
ggtitle("Diversity of SNPs across each chromosome") +
theme(axis.text.x=element_text(angle = 90)) +                 #change orientation of x axis
labs(x = "Position", y = "Density", fill = "Chromosome")
pdf("SNP_Visualisation.pdf")
print(TotalSNPs)
print(DiversitySNPs)
dev.off()
View(DiversitySNPs)
print(TotalSNPs)
print(DiversitySNPs)
dev.off()
print(TotalSNPs)
print(DiversitySNPs)
ggplot(Teosinte_Data, aes(x=as.numeric(Position))) + geom_density(aes(fill(as.factor((as.double((Chromosome)))))))+ facet_wrap(~ as.factor((as.double(Chromosome)),nrow(=2), ncol(=5)))
ggplot(Teosinte_Data, aes(x=as.numeric(Position))) +
geom_density(aes(fill = (as.factor(as.double(Chromosome))))) +
facet_wrap(~ as.factor(as.double(Chromosome)),nrow=2, ncol=5) +
ggtitle("Diversity SNP Teosinte") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x= "Position", y= "Density",fill= "Chromosome")
ggplot(Teosinte_Data, aes(x=as.numeric(Position))) +
geom_density(aes(fill = (as.factor(as.double(Chromosome))))) +
facet_wrap(~ as.factor(as.double(Chromosome)),nrow=3, ncol=5) +
ggtitle("Diversity SNP Teosinte") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x= "Position", y= "Density",fill= "Chromosome")
DiversitySNPs_Teosinte <- ggplot(Teosinte_Data, aes(x=as.numeric(Position))) +
geom_density(aes(fill = (as.factor(as.double(Chromosome))))) +
facet_wrap(~ as.factor(as.double(Chromosome)),nrow=3, ncol=5) +
ggtitle("Diversity SNP Teosinte Across Chromosomes") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x= "Position", y= "Density",fill= "Chromosome")
DiversitySNPs_Maize <- ggplot(Maize_data, aes(x=as.numeric(Position))) +
geom_density(aes(fill = (as.factor(as.double(Chromosome))))) +
facet_wrap(~ as.factor(as.double(Chromosome)),nrow=3, ncol=5) +
ggtitle("Diversity SNP Teosinte Across Chromosomes") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x= "Position", y= "Density",fill= "Chromosome")
View(DiversitySNPs_Maize)
ggplot(Maize_data, aes(x=as.numeric(Position))) +
geom_density(aes(fill = (as.factor(as.double(Chromosome))))) +
facet_wrap(~ as.factor(as.double(Chromosome)),nrow=3, ncol=5) +
ggtitle("Diversity SNP Teosinte Across Chromosomes") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x= "Position", y= "Density",fill= "Chromosome")
ggplot(Maize_data, aes(x=as.numeric(Position))) +
geom_density(aes(fill = (as.factor(as.double(Chromosome))))) +
facet_wrap(~ as.factor(as.double(Chromosome)),nrow=3, ncol=5) +
ggtitle("Diversity SNP Maize Across Chromosomes") +
theme(axis.text.x = element_text(angle = 90)) +
labs(x= "Position", y= "Density",fill= "Chromosome")
#missing data clean up
tidy_genotypes <- Fang_et_al_genotypes %>% select(-JG_OTU) %>% pivot_longer( -Sample_ID: -Group, names_to = "SNP_ID", values_to = "Sequence")
View(tidy_genotypes)
tidy_genotypes <- tidy_genotypes %>% mutate(new_sequence = ifelse(Sequence %in% c("A/A", "T/T", "C/C", "G/G"), "Homozygous", ifelse(Sequence == "?/?", "Missing", "Heterozygous")))
#For all the samples.
Samples_Plot <-  ggplot(tidy_genotypes, aes(x = Sample_ID, fill = new_sequence)) +
ggtitle("Heterozygosity Plot") +
geom_bar(position = "fill") + theme_bw() + labs(x = "Sample ID", y = "Proportion")
#Stacked Bar-graph for all groups.
Groups_Plot <- ggplot(tidy_genotypes, aes(x = Group , fill = new_sequence)) + geom_bar(position = "fill") +
ggtitle("Heterozygosity in various Groups of Species ") +
theme_bw() + theme(axis.text.x = element_text(angle = 90))+ labs(y = "Proportion")
pdf("MissingDATA_Heterozygosity_Visualisation.pdf")
print(Samples_Plot)
print(Groups_Plot)
dev.off()
pdf("MissingDATA_Heterozygosity_Visualisation.pdf")
print(Samples_Plot)
print(Groups_Plot)
dev.off()
pdf("MissingDATA_Heterozygosity_Visualisation.pdf")
print(Samples_Plot)
print(Groups_Plot)
pdf("MissingDATA_Heterozygosity_Visualisation.pdf")
print(Samples_Plot)
print(Groups_Plot)
dev.off()
print(Samples_Plot)
pdf("MissingDATA_Heterozygosity_Visualisation.pdf")
print(Samples_Plot)
print(Groups_Plot)
dev.off()
pdf("MissingDATA_Heterozygosity_Visualisation.pdf")
pdf("MissingDATA_Heterozygosity_Visualisation.pdf")
print(Samples_Plot)
print(Groups_Plot)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
#Own feature
ggplot(filter(tidy_genotypes, Sequence != "?/?") , aes(x = Sample_ID, fill = Sequence)) +
geom_bar(position = "fill") + theme_bw() + labs(x = "Sample ID", y = "Proportion")
#Own feature
Own_Feature <- ggplot(filter(tidy_genotypes, Sequence != "?/?") , aes(x = Sample_ID, fill = Sequence)) +
geom_bar(position = "fill") + theme_bw() + labs(x = "Sample ID", y = "Proportion")
print(Own_Feature)
save.image("C:/Users/domin/OneDrive - Iowa State University/Documents/BCB546_R_Assignment/R_Assignment_Environment.RData")
